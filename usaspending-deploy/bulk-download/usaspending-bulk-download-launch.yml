---
- hosts: "localhost"

# NOTE: This should run after usaspending-api-image.yml

# Required: {{ ANSIBLE_VARS_ENV }}, the prefix to the .yml with ansible vars

  vars:
# Bulk Vars Options: sandbox, dev, staging, prod

    ANSIBLE_VARS_ENV: "{{ ANSIBLE_VARS_ENV }}"
    CONFIG_HOME: "/data-act/config"
    CODE_HOME: "/data-act/backend"
    ansible_python_interpreter: /usr/bin/python

  become_method: sudo

  user: ec2-user
  tasks:

    - name: Load variables from config repo
      include_vars: /{{ CONFIG_HOME }}/deploy/ansible-vars-{{ ANSIBLE_VARS_ENV }}.yml

# usaspending_api/settings.py (for running the actual generate download command)

    - name: set up bulk download -> IS_LOCAL = False, S3/SQS/Region
      lineinfile:
        dest: "{{ CODE_HOME }}/usaspending_api/settings.py"
        regexp: "{{ item.regexp }}"
        line: "{{ item.line }}"
      with_items:
        - { regexp: "^IS_LOCAL =.*",
            line:   "IS_LOCAL = False" }

        - { regexp: '^USASPENDING_AWS_REGION =.*',
            line: "USASPENDING_AWS_REGION = '{{ USASPENDING_AWS_REGION }}'" }

        - { regexp: "^BULK_DOWNLOAD_S3_BUCKET_NAME =.*",
            line:   "BULK_DOWNLOAD_S3_BUCKET_NAME = '{{ BULK_DOWNLOAD_S3_BUCKET_NAME }}'" }

        - { regexp: "^BULK_DOWNLOAD_SQS_QUEUE_NAME =.*",
            line:   "BULK_DOWNLOAD_SQS_QUEUE_NAME = '{{ BULK_DOWNLOAD_SQS_QUEUE_NAME }}'" }

    - name: set ES_HOSTNAME
      lineinfile:
        dest: "{{ CODE_HOME }}/usaspending_api/settings.py"
        regexp: '\s*ES_HOSTNAME\*=.*'
        line: "ES_HOSTNAME = '{{ ES_HOSTNAME }}'"

    - name: download secrets from S3 bucket
      become: true
      shell: "aws s3 cp s3://da-config/usaspending/{{ ANSIBLE_VARS_ENV }}-usaspending-api-secrets.yml /etc/ --region us-gov-west-1"

    - name: load secrets (DB_SOURCE)
      include_vars: /etc/{{ ANSIBLE_VARS_ENV }}-usaspending-api-secrets.yml

#===============================  DataDog Configuration  ===============================#

    - name: add datadog label (app_name)
      become: true
      lineinfile:
        dest: /etc/datadog-agent/datadog.yaml
        regexp: "  env: .*"
        line: "  env:  usaspending-api-{{ ANSIBLE_VARS_ENV }}"

    - name: add tags to datadog.yaml
      become: true
      lineinfile:
        dest: "/etc/datadog-agent/datadog.yaml"
        regexp: "  - ddog: .*"
        line: "  - ddog:usaspending_{{ ANSIBLE_VARS_ENV }}_api"

    - name: disable datadog apm if env is sandbox or dev
      become: true
      when: BRANCH == "dev" or BRANCH == "sandbox"
      lineinfile:
        dest: "/etc/datadog-agent/datadog.yaml"
        regexp: "^  enabled: true"
        insertafter: "^apm_config:.*"
        line: "  enabled: false"

    - name: ensure dd-agent ownership for datadog directory
      become: true
      file:
        path: /etc/datadog-agent/
        state: directory
        owner: dd-agent
        group: dd-agent
        recurse: yes

    - name: add single-interpreter to uwsgi_db.ini
      become: true
      ini_file:
        dest: "{{ CODE_HOME }}/config/uwsgi_db.ini"
        section: "uwsgi"
        option: single-interpreter
        value: true

    - name: add ddtrace to supervisord configuration (start command)
      ini_file:
        dest: "{{ CODE_HOME }}/config/supervisord.conf"
        section: "program:uwsgi"
        option: command
        value: "ddtrace-run uwsgi --ini /data-act/backend/config/uwsgi_db.ini --socket :3030 --stats /tmp/stats.socket"

    - name: add ddtrace to INSTALLED_APPS in settings.py
      lineinfile:
        dest: "{{ CODE_HOME }}/usaspending_api/settings.py"
        insertafter: "^    'django.contrib.postgres',\n"
        line: "    'ddtrace.contrib.django',"

    - name: add ddtrace environment variables to settings.py
      lineinfile:
        dest: "{{ CODE_HOME }}/usaspending_api/settings.py"
        insertafter: "^INTERNAL_IPS = ()"
        line: |
          DATADOG_TRACE = {
            'DEFAULT_SERVICE': 'BD',
            'TAGS': {'env': 'usaspending_{{ ANSIBLE_VARS_ENV }}_bd'},
          }

# config/filebeat/filebeat.yml

    - name: copy filebeat config
      become: true
      copy:
        src:  "{{ CONFIG_HOME }}/deploy/elk/usaspending_api_filebeat.yml"
        dest: "/etc/filebeat/filebeat.yml"
        remote_src: true

    - name: update filebeat config to set correct index
      become: true
      replace:
        dest: "/etc/filebeat/filebeat.yml"
        regexp: 'index: filebeat'
        replace: "index: usaspending-bd-{{ ANSIBLE_VARS_ENV }}"


# Start Worker

    - name: enable & restart datadog-agent service
      become: true
      shell: "systemctl enable datadog-agent && systemctl restart datadog-agent"

    - name: enable & restart filebeat service
      become: true
      shell: "systemctl enable filebeat && systemctl restart filebeat"

    - name: stop supervisord
      become: true
      shell: pkill supervisord
      ignore_errors: true

    - name: start supervisord
      become: true
      shell: "supervisord -c {{ CODE_HOME }}/usaspending_api/bulk_download/config/supervisord.conf &"
      environment:
        PYTHONPATH: "{{ CODE_HOME }}"
        NUM_PROCS: "{{ NUM_PROCS }}"
        DATABASE_URL_VAR: "{{ DB_SOURCE }}"
        DOWNLOAD_DATABASE_URL: "{{ DOWNLOAD_DATABASE_URL }}"
      args:
        chdir: "{{ CODE_HOME }}/usaspending_api/"
